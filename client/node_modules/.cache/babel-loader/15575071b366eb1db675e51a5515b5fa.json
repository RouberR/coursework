{"ast":null,"code":"const crypto = require('crypto'); // const { key, algorithm } = JSON.parse(cipherData);\n\n\nconst key = '';\nconst algorithm = '';\nexport const encryptMessage = message => {\n  const iv = crypto.randomBytes(8).toString('hex');\n  const cipher = crypto.createCipheriv(algorithm, key, iv);\n  let encrypted = cipher.update(message, 'utf-8', 'hex');\n  encrypted += cipher.final('hex');\n  return `${encrypted}:${iv}`;\n};\n\nconst decryptMessage = message => {\n  const [encryptedMessage, iv] = message.split(':');\n  const decipher = crypto.createDecipheriv(algorithm, key, iv);\n  let decrypted = decipher.update(encryptedMessage, 'hex', 'utf-8');\n  decrypted += decipher.final('utf-8');\n  return decrypted;\n};\n\nconsole.log(decryptMessage(encryptMessage('Hi! How are you?')));","map":{"version":3,"names":["crypto","require","key","algorithm","encryptMessage","message","iv","randomBytes","toString","cipher","createCipheriv","encrypted","update","final","decryptMessage","encryptedMessage","split","decipher","createDecipheriv","decrypted","console","log"],"sources":["/Users/fiadosenka/coursework/client/src/utils/crypto.js"],"sourcesContent":["const crypto = require('crypto');\n\n// const { key, algorithm } = JSON.parse(cipherData);\nconst key = '';\nconst algorithm = '';\nexport const encryptMessage = (message) => {\n  const iv = crypto.randomBytes(8).toString('hex');\n  const cipher = crypto.createCipheriv(algorithm, key, iv);\n\n  let encrypted = cipher.update(message, 'utf-8', 'hex');\n  encrypted += cipher.final('hex');\n  return `${encrypted}:${iv}`;\n};\n\nconst decryptMessage = (message) => {\n  const [encryptedMessage, iv] = message.split(':');\n  const decipher = crypto.createDecipheriv(algorithm, key, iv);\n\n  let decrypted = decipher.update(encryptedMessage, 'hex', 'utf-8');\n  decrypted += decipher.final('utf-8');\n\n  return decrypted;\n};\n\nconsole.log(decryptMessage(encryptMessage('Hi! How are you?')));\n"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB,C,CAEA;;;AACA,MAAMC,GAAG,GAAG,EAAZ;AACA,MAAMC,SAAS,GAAG,EAAlB;AACA,OAAO,MAAMC,cAAc,GAAIC,OAAD,IAAa;EACzC,MAAMC,EAAE,GAAGN,MAAM,CAACO,WAAP,CAAmB,CAAnB,EAAsBC,QAAtB,CAA+B,KAA/B,CAAX;EACA,MAAMC,MAAM,GAAGT,MAAM,CAACU,cAAP,CAAsBP,SAAtB,EAAiCD,GAAjC,EAAsCI,EAAtC,CAAf;EAEA,IAAIK,SAAS,GAAGF,MAAM,CAACG,MAAP,CAAcP,OAAd,EAAuB,OAAvB,EAAgC,KAAhC,CAAhB;EACAM,SAAS,IAAIF,MAAM,CAACI,KAAP,CAAa,KAAb,CAAb;EACA,OAAQ,GAAEF,SAAU,IAAGL,EAAG,EAA1B;AACD,CAPM;;AASP,MAAMQ,cAAc,GAAIT,OAAD,IAAa;EAClC,MAAM,CAACU,gBAAD,EAAmBT,EAAnB,IAAyBD,OAAO,CAACW,KAAR,CAAc,GAAd,CAA/B;EACA,MAAMC,QAAQ,GAAGjB,MAAM,CAACkB,gBAAP,CAAwBf,SAAxB,EAAmCD,GAAnC,EAAwCI,EAAxC,CAAjB;EAEA,IAAIa,SAAS,GAAGF,QAAQ,CAACL,MAAT,CAAgBG,gBAAhB,EAAkC,KAAlC,EAAyC,OAAzC,CAAhB;EACAI,SAAS,IAAIF,QAAQ,CAACJ,KAAT,CAAe,OAAf,CAAb;EAEA,OAAOM,SAAP;AACD,CARD;;AAUAC,OAAO,CAACC,GAAR,CAAYP,cAAc,CAACV,cAAc,CAAC,kBAAD,CAAf,CAA1B"},"metadata":{},"sourceType":"module"}